"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8708],{6124:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>a});var s=n(4848),t=n(8453);const l={},r="ListView",o={id:"mini-apps/components/ListView",title:"ListView",description:"Represents a list view containing multiple list tiles.",source:"@site/docs/mini-apps/components/ListView.md",sourceDirName:"mini-apps/components",slug:"/mini-apps/components/ListView",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/ListView",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"ListTile",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/ListTile"},next:{title:"SearchBar",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/SearchBar"}},c={},a=[{value:"Constructor:",id:"constructor",level:3},{value:"ListViewType",id:"listviewtype",level:2},{value:"Enum Values:",id:"enum-values",level:4},{value:"Usage Example:",id:"usage-example",level:3}];function d(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"listview",children:"ListView"})}),"\n",(0,s.jsx)(i.p,{children:"Represents a list view containing multiple list tiles."}),"\n",(0,s.jsx)(i.h3,{id:"constructor",children:"Constructor:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"options"}),": A list of ",(0,s.jsx)(i.code,{children:"ListTile"})," or ",(0,s.jsx)(i.code,{children:"SmallListTile"})," instances."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"view_type"})," (Optional): The type of the list view, default is ",(0,s.jsx)(i.code,{children:"ListViewType.DEFAULT"}),"."]}),"\n"]}),"\n",(0,s.jsx)(i.h2,{id:"listviewtype",children:"ListViewType"}),"\n",(0,s.jsx)(i.p,{children:"Enumerates the types of list views available."}),"\n",(0,s.jsx)(i.h4,{id:"enum-values",children:"Enum Values:"}),"\n",(0,s.jsxs)(i.ul,{children:["\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"DEFAULT"}),": Represents the default list view type."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"SMALL"}),": Represents a small-sized list view."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"LARGE"}),": Represents a large-sized list view."]}),"\n",(0,s.jsxs)(i.li,{children:[(0,s.jsx)(i.code,{children:"COMPACT"}),": Represents a different view with large thumbnail with badges."]}),"\n"]}),"\n",(0,s.jsx)(i.h3,{id:"usage-example",children:"Usage Example:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-python",children:"list_view = ListView(\n    options=[list_tile, small_list_tile],\n    view_type=ListViewType.SMALL\n)\n"})})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>o});var s=n(6540);const t={},l=s.createContext(t);function r(e){const i=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(l.Provider,{value:i},e.children)}}}]);