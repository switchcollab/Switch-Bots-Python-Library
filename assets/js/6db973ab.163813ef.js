"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6219],{1985:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>a});var o=n(5893),i=n(1151);const s={sidebar_position:1},r="Client",c={id:"api_reference/client",title:"Client",description:"Class swibots.Client",source:"@site/docs/api_reference/client.md",sourceDirName:"api_reference",slug:"/api_reference/client",permalink:"/Switch-Bots-Python-Library/docs/api_reference/client",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/Switch-Bots-Python-Library/docs/category/api-reference"},next:{title:"Methods",permalink:"/Switch-Bots-Python-Library/docs/category/methods"}},l={},a=[{value:"Properties",id:"properties",level:2},{value:"Example",id:"example",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"client",children:"Client"}),"\n",(0,o.jsx)(t.p,{children:(0,o.jsx)(t.code,{children:"Class swibots.Client"})}),"\n",(0,o.jsx)(t.p,{children:"This is the main class of the library. It is used to create a bot app and to call the API methods."}),"\n",(0,o.jsx)(t.h2,{id:"properties",children:"Properties"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"token"})," (",(0,o.jsx)(t.code,{children:"str"}),"): Bot token (This is the token you must use to authenticate the bot)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"bot_description"})," (",(0,o.jsx)(t.code,{children:"str"}),", Optional): Bot description (This is the description of the bot)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"auto_update_bot"})," (",(0,o.jsx)(t.code,{children:"bool"}),", Optional): Auto update bot (This is the flag to enable/disable the auto update of the bot into the database)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"receive_updates"})," (",(0,o.jsx)(t.code,{children:"bool"}),", Optional): Whether to receive event updates, defaults to ",(0,o.jsx)(t.code,{children:"True"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"loop"})," (",(0,o.jsx)(t.code,{children:"asyncio.AbstractEventLoop"}),", Optional): AsyncIO Event loop (This is used in case you want to use a custom event loop)"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"is_app"})," (",(0,o.jsx)(t.code,{children:"bool"}),", Optional): Whether to mark the bot as a APP!"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.code,{children:"home_callback"})," (",(0,o.jsx)(t.code,{children:"str"}),", Optional): The default callback data to send, if opened through 'open app' button!"]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-python",children:'from swibots import Client\n\napp = Client("token", "This is a bot")\n\nasync def main():\n    await app.send_message(123, "Hello world")\n\napp.run(main())\n'})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>c,a:()=>r});var o=n(7294);const i={},s=o.createContext(i);function r(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);