"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4498],{572:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"api_reference/methods/edit_media","title":"edit_media","description":"Edits the media of a message.","source":"@site/docs/api_reference/methods/edit_media.md","sourceDirName":"api_reference/methods","slug":"/api_reference/methods/edit_media","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/edit_media","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"download_media","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/download_media"},"next":{"title":"edit_message","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/edit_message"}}');var s=n(4848),d=n(8453);const r={},a="edit_media",l={},o=[{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3},{value:"Example",id:"example",level:3}];function c(e){const t={code:"code",em:"em",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"edit_media",children:"edit_media"})}),"\n",(0,s.jsx)(t.p,{children:"Edits the media of a message."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'async def edit_media(\n        self: "swibots.ApiClient",\n        message_id: Optional[int] = None,\n        media_id: Optional[int] = None,\n        message: Optional[str] = None,\n        document: Optional[str] = None,\n        thumb: Optional[str] = None,\n        inline_markup: InlineMarkup = None,\n        progress=None,\n        progress_args: Optional[Tuple] = None,\n        mime_type: Optional[str] = None,\n        file_name: Optional[str] = None,\n    ) -> Message:\n'})}),"\n",(0,s.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Parameter"}),(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"message_id"}),(0,s.jsx)(t.td,{children:"Optional[int]"}),(0,s.jsx)(t.td,{children:"The ID of the message to edit."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"media_id"}),(0,s.jsx)(t.td,{children:"Optional[int]"}),(0,s.jsx)(t.td,{children:"The ID of the media to update."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"message"}),(0,s.jsx)(t.td,{children:"Optional[str]"}),(0,s.jsx)(t.td,{children:"The new message or caption."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"document"}),(0,s.jsx)(t.td,{children:"Optional[str]"}),(0,s.jsx)(t.td,{children:"The path to the new media file."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"thumb"}),(0,s.jsx)(t.td,{children:"Optional[str]"}),(0,s.jsx)(t.td,{children:"The path to the new thumbnail file."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"inline_markup"}),(0,s.jsx)(t.td,{children:"InlineMarkup, optional"}),(0,s.jsx)(t.td,{children:"The new inline markup for the message."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"progress"}),(0,s.jsxs)(t.td,{children:[(0,s.jsx)(t.em,{children:"type"}),", optional"]}),(0,s.jsx)(t.td,{children:"A callback function to be called during the upload progress."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"progress_args"}),(0,s.jsx)(t.td,{children:"Optional[Tuple], optional"}),(0,s.jsx)(t.td,{children:"Arguments to be passed to the progress callback."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"mime_type"}),(0,s.jsx)(t.td,{children:"Optional[str], optional"}),(0,s.jsx)(t.td,{children:"The MIME type of the new media file."})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"file_name"}),(0,s.jsx)(t.td,{children:"Optional[str], optional"}),(0,s.jsx)(t.td,{children:"The name of the new media file."})]})]})]}),"\n",(0,s.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Type"}),(0,s.jsx)(t.th,{children:"Description"})]})}),(0,s.jsx)(t.tbody,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Media"}),(0,s.jsx)(t.td,{children:"The edited message."})]})})]}),"\n",(0,s.jsx)(t.h3,{id:"example",children:"Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-python",children:'message_id = 1111\n\nawait client.edit_media(\n    message_id=message_id,\n    document="file.pdf",\n    thumb="image.png"\n)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,d.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(6540);const s={},d=i.createContext(s);function r(e){const t=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(d.Provider,{value:t},e.children)}}}]);