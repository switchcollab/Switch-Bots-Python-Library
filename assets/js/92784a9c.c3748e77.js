"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1934],{7524:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"interactions/keyboards","title":"Keyboards","description":"The Message class contains a property called inline_markup where you can add","source":"@site/docs/interactions/keyboards.md","sourceDirName":"interactions","slug":"/interactions/keyboards","permalink":"/Switch-Bots-Python-Library/docs/interactions/keyboards","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Commands","permalink":"/Switch-Bots-Python-Library/docs/interactions/commands"},"next":{"title":"Advertising","permalink":"/Switch-Bots-Python-Library/docs/interactions/advertising"}}');var o=t(4848),i=t(8453);const s={sidebar_position:2},r="Keyboards",d={},l=[{value:"Creating an inline keyboard",id:"creating-an-inline-keyboard",level:2}];function c(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"keyboards",children:"Keyboards"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"Message"})," class contains a property called ",(0,o.jsx)(n.code,{children:"inline_markup"})," where you can add\nbuttons to allow the user interact with your bot. This is called an inline\nkeyboard."]}),"\n",(0,o.jsx)(n.h2,{id:"creating-an-inline-keyboard",children:"Creating an inline keyboard"}),"\n",(0,o.jsxs)(n.p,{children:["You can create an inline keyboard using the ",(0,o.jsx)(n.code,{children:"InlineKeyboard"})," class."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"InlineKeyboard"})," class has 4 properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"inline_keyboard"}),": A list of lists (each list is an ",(0,o.jsx)(n.code,{children:"inline_markup"})," row,\ncontaining another list with one or more ",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"}),") of\n",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"})," objects."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["This class contains a method called ",(0,o.jsx)(n.code,{children:"add_button"})," that allows you to add buttons\nto the keyboard. This method accepts a ",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"})," object as a\nparameter."]}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"})," class has 4 properties:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"text"}),": The text that will be shown on the button."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"callback_data"}),": The data that will be sent to the bot when the button is\npressed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"url"}),": The URL that will be opened when the button is pressed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"game"}),": Whether the button is game button, (url must be present.)"]}),"\n"]}),"\n",(0,o.jsx)(n.admonition,{type:"tip",children:(0,o.jsxs)(n.p,{children:["You can also add a inline keyboard passing a ",(0,o.jsx)(n.em,{children:"list of lists"}),"\n(each list\nis an ",(0,o.jsx)(n.code,{children:"inline_markup"})," row, containing another list with one or more\n",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"}),") of ",(0,o.jsx)(n.code,{children:"InlineKeyboardButton"})," objects to the\n",(0,o.jsx)(n.code,{children:"inline_keyboard"})," parameter of the ",(0,o.jsx)(n.code,{children:"InlineMarkup"})," class."]})}),"\n",(0,o.jsx)(n.p,{children:"Here is an example of how to create an inline keyboard, add it to a message and\nreceive the callback data when the user presses a button:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:'from swibots import Client, BotContext, CallbackQueryEvent, CommandEvent, InlineMarkup, InlineKeyboardButton, regexp\nimport os\n\nenv_file = os.path.join(os.path.dirname(__file__), "..", "..", ".env")\nload_dotenv(env_file)\n\nTOKEN = os.environ.get(\'BOT_TOKEN\')\n\n# initialize the app and register commands\napp = Client(\n    TOKEN,\n    auto_update_bot=False,  # disable auto update bot info\n)\n\n# Setup what to do on receiving [buttons] command\n@app.on_command("buttons")\nasync def buttons_handler(ctx: BotContext[CommandEvent]):\n    m = ctx.event.message\n    inline_keyboard = [\n        [\n            InlineKeyboardButton(text="Option 1", callback_data="option1"),\n            InlineKeyboardButton(text="Option 2", callback_data="option2"),\n        ],\n        [\n            InlineKeyboardButton(text="Option 3", callback_data="option3"),\n            InlineKeyboardButton(text="Option 4", callback_data="option4"),\n        ],\n    ]\n    inline_markup = InlineMarkup(inline_keyboard=inline_keyboard)\n    await m.reply_text(f"Please select an option:", inline_markup=inline_markup)\n\n\n# handle callback query\n@app.on_callback_query(regexp(r"option\\d"))\nasync def callback_query_handler(ctx: BotContext[CallbackQueryEvent]):\n    message = ctx.event.message\n    message.message = f"Option with data: {ctx.event.callback_data} selected!"\n    await ctx.bot.edit_message(message)\n\n# Register the command to receive CommandEvent\napp.set_bot_commands([\n    BotCommand(\'buttons\', \'Get buttons\'),\n])\n\napp.run()\n'})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var a=t(6540);const o={},i=a.createContext(o);function s(e){const n=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:n},e.children)}}}]);