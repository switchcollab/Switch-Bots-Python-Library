"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8831],{6290:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>c,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"api_reference/methods/get_stickers","title":"get_stickers","description":"get_stickers Method","source":"@site/docs/api_reference/methods/get_stickers.md","sourceDirName":"api_reference/methods","slug":"/api_reference/methods/get_stickers","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/get_stickers","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"get_organizations","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/get_organizations"},"next":{"title":"get_unread_messages_count","permalink":"/Switch-Bots-Python-Library/docs/api_reference/methods/get_unread_messages_count"}}');var r=s(4848),i=s(8453);const c={},o=void 0,a={},d=[{value:"<code>get_stickers</code> Method",id:"get_stickers-method",level:2},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Returns",id:"returns",level:3}];function l(e){const t={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.h2,{id:"get_stickers-method",children:[(0,r.jsx)(t.code,{children:"get_stickers"})," Method"]}),"\n",(0,r.jsx)(t.p,{children:"Retrieves a list of stickers from a sticker pack."}),"\n",(0,r.jsx)(t.h3,{id:"signature",children:"Signature"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-python",children:"async def get_stickers(\n    pack_id: str,\n    limit: Optional[int] = 30,\n    offset: Optional[int] = 0,\n) -> List[Sticker]:\n"})}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"pack_id"})," (str): Pack ID of the sticker pack."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"limit"})," (Optional[int]): The maximum number of stickers to retrieve. Defaults to 30."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"offset"})," (Optional[int]): The offset to fetch stickers. Defaults to 0."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"returns",children:"Returns"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.code,{children:"List[Sticker]"}),": List of stickers from the specified pack."]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>c,x:()=>o});var n=s(6540);const r={},i=n.createContext(r);function c(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);