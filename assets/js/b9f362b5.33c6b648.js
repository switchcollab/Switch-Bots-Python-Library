"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6766],{266:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=t(5893),o=t(1151);const s={},r=void 0,l={id:"mini-apps/components/TextInput",title:"TextInput",description:"TextInput",source:"@site/docs/mini-apps/components/TextInput.md",sourceDirName:"mini-apps/components",slug:"/mini-apps/components/TextInput",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/TextInput",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Text",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/Text"},next:{title:"VideoPlayer",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/components/VideoPlayer"}},a={},d=[{value:"TextInput",id:"textinput",level:2},{value:"Properties",id:"properties",level:3},{value:"KeyboardType Enum",id:"keyboardtype-enum",level:2},{value:"Usage Example",id:"usage-example",level:4}];function c(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"textinput",children:"TextInput"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"TextInput"})," class represents an input box component for capturing user input in a user interface."]}),"\n",(0,i.jsx)(n.h3,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"label"})," (Required): The label associated with the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"value"})," (Optional): The current value of the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"width"})," (Optional): The width of the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"placeholder"})," (Optional): The placeholder text displayed in the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"callback_data"})," (Optional): Data associated with a callback."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"keyboard_type"})," (Optional): The type of keyboard to be displayed (default is ",(0,i.jsx)(n.code,{children:"KeyboardType.TEXT"}),")."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"error"})," (Optional): A boolean flag indicating whether an error state is present."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"error_text"})," (Optional): The text to be displayed in case of an error."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"password"})," (Optional): A boolean flag indicating whether the input should be treated as a password."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"right_icon"})," (Optional): An icon displayed on the right side of the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"left_icon"})," (Optional): An icon displayed on the left side of the input box."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"expanded"})," (bool): whether to show expanded text input."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"multiline"})," (bool): whether to show multiline input."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"keyboardtype-enum",children:"KeyboardType Enum"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"KeyboardType"})," enum defines the following keyboard types:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"NUMBER"}),": Numeric keyboard."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TEXT"}),": Text keyboard (default)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"EMAIL"}),": Email keyboard."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"URL"}),": URL keyboard."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"usage-example",children:"Usage Example"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'# Create a TextInput instance:\ntext_input = TextInput(\n    label="Username",\n    value="",\n    width=300,\n    placeholder="Enter your username",\n    callback_data="UsernameCallback",\n    keyboardType=KeyboardType.TEXT,\n    error=True,\n    error_text="Invalid username",\n    password=False,\n    right_icon="https://img.icons8.com/?size=20&id=12345&format=png",\n    left_icon="https://img.icons8.com/?size=20&id=67890&format=png",\n)\n'})}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsx)(n.p,{children:"The input value of TextInput can be obtained as shown below:"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'@app.on_callback_query(regexp(...))\nasync def onCallback(ctx: BotContext[CallbackQueryEvent]):\n    input_ = ctx.event.details.input_value\n    print("User entered", input_)\n'})})]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>l,a:()=>r});var i=t(7294);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);