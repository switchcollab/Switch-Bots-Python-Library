"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2337],{6923:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var s=t(5893),o=t(1151);const i={sidebar_position:2},p=void 0,a={id:"mini-apps/AppPage",title:"AppPage",description:"AppPage",source:"@site/docs/mini-apps/AppPage.md",sourceDirName:"mini-apps",slug:"/mini-apps/AppPage",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/AppPage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/intro"},next:{title:"AppBar",permalink:"/Switch-Bots-Python-Library/docs/mini-apps/AppBar"}},r={},c=[{value:"AppPage",id:"apppage",level:3},{value:"Properties",id:"properties",level:4},{value:"Methods",id:"methods",level:4},{value:"Usage Example",id:"usage-example",level:4},{value:"ScreenType (Enum):",id:"screentype-enum",level:3}];function l(e){const n={code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h3,{id:"apppage",children:"AppPage"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"AppPage"})," class represents a page within a Switch application."]}),"\n",(0,s.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"screen"})," (Optional): The type of screen for the page, default is ",(0,s.jsx)(n.code,{children:"ScreenType.SCREEN"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"components"})," (Optional): A list of standalone components to be included in the page."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"app_bar"})," (Optional): The app bar component for the page."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"disable_appbar"})," (Optional, bool): Whether to disable the appbar for current page."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"bottom_bar"})," (Optional): The bottom bar component for the page."]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.strong,{children:"Constructor"})}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def __init__(\n    self,\n    app: "swibots.App" = None,\n    screen: ScreenType = ScreenType.SCREEN,\n    layouts: List[Layout] = None,\n    components: List[Component] = None,\n    app_bar: AppBar = None,\n    disable_appbar: bool = None,\n    bottom_bar: BottomBar = None,\n)\n'})}),"\n",(0,s.jsx)(n.h4,{id:"usage-example",children:"Usage Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'# Create an AppPage instance:\napp_page = AppPage(\n    screen=ScreenType.FULLSCREEN,\n    layouts=[Carousel(images=[Image(url="https://example.com/image1.jpg")])],\n    components=[Button(text="Click Me")],\n    app_bar=AppBar(title="My Page")\n)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"screentype-enum",children:"ScreenType (Enum):"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"BOTTOM"}),": to display bottom sheet."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"SCREEN"}),": to display as page."]}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>p});var s=t(7294);const o={},i=s.createContext(o);function p(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:p(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);