"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8032],{3393:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"examples/poll-bot","title":"Poll Bot Example","description":"This example demonstrates how to create a poll bot using SwiBots. The bot allows users to create polls, vote on them, and view results.","source":"@site/docs/examples/poll-bot.md","sourceDirName":"examples","slug":"/examples/poll-bot","permalink":"/Switch-Bots-Python-Library/docs/examples/poll-bot","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Mini App Bot Example","permalink":"/Switch-Bots-Python-Library/docs/examples/mini-app-bot"},"next":{"title":"Restaurant Menu and Order Bot Example","permalink":"/Switch-Bots-Python-Library/docs/examples/restaurant-menu-bot"}}');var l=t(4848),s=t(8453);const a={},i="Poll Bot Example",r={},p=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"The Code",id:"the-code",level:2},{value:"Running the Bot",id:"running-the-bot",level:2},{value:"Using the Bot",id:"using-the-bot",level:2},{value:"Features Demonstrated",id:"features-demonstrated",level:2},{value:"Note",id:"note",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(n.header,{children:(0,l.jsx)(n.h1,{id:"poll-bot-example",children:"Poll Bot Example"})}),"\n",(0,l.jsx)(n.p,{children:"This example demonstrates how to create a poll bot using SwiBots. The bot allows users to create polls, vote on them, and view results."}),"\n",(0,l.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,l.jsx)(n.p,{children:"Before you begin, make sure you have:"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["Installed SwiBots (",(0,l.jsx)(n.code,{children:"pip install swibots"}),")"]}),"\n",(0,l.jsx)(n.li,{children:"Obtained a bot token from the Switch platform"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"the-code",children:"The Code"}),"\n",(0,l.jsx)(n.p,{children:"Here's the complete code for our poll bot:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-python",children:'import json\nfrom swibots import (\n    Client, BotContext, MessageEvent, CallbackQueryEvent,\n    InlineKeyboardButton, InlineMarkup\n)\n\napp = Client("YOUR_BOT_TOKEN")\npolls = {}  # In-memory storage for polls\n\n@app.on_message()\nasync def message_handler(ctx: BotContext[MessageEvent]):\n    message = ctx.event.message\n    if message.message.startswith("/createpoll"):\n        await create_poll(ctx)\n    elif message.message.startswith("/viewpolls"):\n        await view_polls(ctx)\n\n@app.on_callback_query()\nasync def callback_handler(ctx: BotContext[CallbackQueryEvent]):\n    data = json.loads(ctx.event.data)\n    if data["action"] == "vote":\n        await handle_vote(ctx, data)\n\nasync def create_poll(ctx: BotContext[MessageEvent]):\n    parts = ctx.event.message.message.split("\\n")\n    if len(parts) < 4:\n        await ctx.event.message.respond("Please provide a question and at least 2 options.")\n        return\n\n    question = parts[0].replace("/createpoll ", "")\n    options = parts[1:]\n    poll_id = str(len(polls) + 1)\n    polls[poll_id] = {"question": question, "options": options, "votes": {opt: 0 for opt in options}}\n\n    await ctx.event.message.respond(f"Poll created with ID: {poll_id}")\n\nasync def view_polls(ctx: BotContext[MessageEvent]):\n    if not polls:\n        await ctx.event.message.respond("No polls available.")\n        return\n\n    for poll_id, poll in polls.items():\n        buttons = []\n        for option in poll["options"]:\n            buttons.append([InlineKeyboardButton(\n                text=f"{option} ({poll[\'votes\'][option]} votes)",\n                callback_data=json.dumps({"action": "vote", "poll_id": poll_id, "option": option})\n            )])\n\n        markup = InlineMarkup(buttons)\n        await ctx.event.message.respond(\n            f"Poll {poll_id}: {poll[\'question\']}",\n            inline_markup=markup\n        )\n\nasync def handle_vote(ctx: BotContext[CallbackQueryEvent], data):\n    poll_id = data["poll_id"]\n    option = data["option"]\n    polls[poll_id]["votes"][option] += 1\n\n    await ctx.event.answer("Vote recorded!")\n    await view_polls(ctx)\n\napp.run()\n'})}),"\n",(0,l.jsx)(n.h2,{id:"running-the-bot",children:"Running the Bot"}),"\n",(0,l.jsx)(n.p,{children:"To run the bot, simply execute the script:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-bash",children:"python poll_bot.py\n"})}),"\n",(0,l.jsx)(n.h2,{id:"using-the-bot",children:"Using the Bot"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Create a poll:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"/createpoll What's your favorite color?\nRed\nBlue\nGreen\nYellow\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"View active polls:"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{children:"/viewpolls\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.p,{children:"Vote on a poll by clicking the option buttons."}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"features-demonstrated",children:"Features Demonstrated"}),"\n",(0,l.jsxs)(n.ol,{children:["\n",(0,l.jsx)(n.li,{children:"Command handling"}),"\n",(0,l.jsx)(n.li,{children:"Inline keyboards"}),"\n",(0,l.jsx)(n.li,{children:"Callback query handling"}),"\n",(0,l.jsx)(n.li,{children:"Basic data persistence (in-memory)"}),"\n",(0,l.jsx)(n.li,{children:"Dynamic message updates"}),"\n"]}),"\n",(0,l.jsx)(n.h2,{id:"note",children:"Note"}),"\n",(0,l.jsx)(n.p,{children:"This is a basic implementation. For a production-ready bot, consider adding error handling, input validation, and persistent storage for polls."})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>i});var o=t(6540);const l={},s=o.createContext(l);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);