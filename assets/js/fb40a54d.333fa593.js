"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3705],{668:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>h,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"examples/weather-bot","title":"Weather Bot Example","description":"This example demonstrates how to create a weather bot using SwiBots. The bot can fetch current weather information for a given city using the OpenWeatherMap API.","source":"@site/docs/examples/weather-bot.md","sourceDirName":"examples","slug":"/examples/weather-bot","permalink":"/Switch-Bots-Python-Library/docs/examples/weather-bot","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Travel Planner Bot Example","permalink":"/Switch-Bots-Python-Library/docs/examples/travel-planner-bot"},"next":{"title":"Deploy","permalink":"/Switch-Bots-Python-Library/docs/category/deploy"}}');var a=n(4848),o=n(8453);const i={},s="Weather Bot Example",h={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"The Code",id:"the-code",level:2},{value:"Running the Bot",id:"running-the-bot",level:2},{value:"Using the Bot",id:"using-the-bot",level:2},{value:"Note",id:"note",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsx)(t.h1,{id:"weather-bot-example",children:"Weather Bot Example"})}),"\n",(0,a.jsx)(t.p,{children:"This example demonstrates how to create a weather bot using SwiBots. The bot can fetch current weather information for a given city using the OpenWeatherMap API."}),"\n",(0,a.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,a.jsx)(t.p,{children:"Before you begin, make sure you have:"}),"\n",(0,a.jsxs)(t.ol,{children:["\n",(0,a.jsxs)(t.li,{children:["Installed SwiBots (",(0,a.jsx)(t.code,{children:"pip install swibots"}),")"]}),"\n",(0,a.jsxs)(t.li,{children:["Installed the ",(0,a.jsx)(t.code,{children:"requests"})," library (",(0,a.jsx)(t.code,{children:"pip install requests"}),")"]}),"\n",(0,a.jsx)(t.li,{children:"Obtained a bot token from the Switch platform"}),"\n",(0,a.jsxs)(t.li,{children:["Signed up for a free API key from ",(0,a.jsx)(t.a,{href:"https://openweathermap.org/api",children:"OpenWeatherMap"})]}),"\n"]}),"\n",(0,a.jsx)(t.h2,{id:"the-code",children:"The Code"}),"\n",(0,a.jsx)(t.p,{children:"Here's the complete code for our weather bot:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-python",children:'import os\nfrom swibots import Client, BotContext, MessageEvent\nimport requests\n\napp = Client(os.environ["BOT_TOKEN"])\nWEATHER_API_KEY = os.environ["WEATHER_API_KEY"]\n\n@app.on_message()\nasync def weather_handler(ctx: BotContext[MessageEvent]):\n    message = ctx.event.message\n    if message.message.startswith("/weather"):\n        city = message.message.split("/weather ", 1)[1]\n        weather_data = get_weather(city)\n        if weather_data:\n            response = format_weather_response(city, weather_data)\n        else:\n            response = f"Sorry, I couldn\'t find weather information for {city}."\n        await message.respond(response)\n\ndef get_weather(city):\n    url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={WEATHER_API_KEY}&units=metric"\n    response = requests.get(url)\n    if response.status_code == 200:\n        return response.json()\n    return None\n\ndef format_weather_response(city, data):\n    main = data[\'main\']\n    weather = data[\'weather\'][0]\n    return f"""Weather in {city}:\nTemperature: {main[\'temp\']}\xb0C\nFeels like: {main[\'feels_like\']}\xb0C\nHumidity: {main[\'humidity\']}%\nDescription: {weather[\'description\'].capitalize()}"""\n\napp.run()\n'})}),"\n",(0,a.jsx)(t.h2,{id:"running-the-bot",children:"Running the Bot"}),"\n",(0,a.jsx)(t.p,{children:"To run the bot, set your environment variables and execute the script:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-bash",children:'export BOT_TOKEN="your_bot_token_here"\nexport WEATHER_API_KEY="your_openweathermap_api_key_here"\npython weather_bot.py\n'})}),"\n",(0,a.jsx)(t.h2,{id:"using-the-bot",children:"Using the Bot"}),"\n",(0,a.jsx)(t.p,{children:"To use the bot, send a message in the following format:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"/weather City Name\n"})}),"\n",(0,a.jsx)(t.p,{children:"For example:"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"/weather London\n"})}),"\n",(0,a.jsx)(t.p,{children:"The bot will respond with current weather information for the specified city."}),"\n",(0,a.jsx)(t.h2,{id:"note",children:"Note"}),"\n",(0,a.jsx)(t.p,{children:"This is a basic implementation. You might want to add error handling, input validation, and more features to make it production-ready."})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>s});var r=n(6540);const a={},o=r.createContext(a);function i(e){const t=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(o.Provider,{value:t},e.children)}}}]);