"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9912],{1848:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>d,contentTitle:()=>t,default:()=>a,frontMatter:()=>i,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"api_reference/types/channel","title":"Channel","description":"Class swibots.api.community.models.Channel","source":"@site/docs/api_reference/types/channel.md","sourceDirName":"api_reference/types","slug":"/api_reference/types/channel","permalink":"/Switch-Bots-Python-Library/docs/api_reference/types/channel","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"BotInfo","permalink":"/Switch-Bots-Python-Library/docs/api_reference/types/botinfo"},"next":{"title":"Community","permalink":"/Switch-Bots-Python-Library/docs/api_reference/types/community"}}');var r=c(4848),l=c(8453);const i={},t="Channel",d={},o=[{value:"Properties",id:"properties",level:2}];function h(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",ul:"ul",...(0,l.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"channel",children:"Channel"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"Class swibots.api.community.models.Channel"})}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"Channel"})," class represents a channel."]}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"id"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's id."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"name"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's name."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"community_id"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's community id."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"enabled_free"})," (",(0,r.jsx)(n.code,{children:"bool"}),"): Whether the channel is enabled for free users."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"enabled_public"})," (",(0,r.jsx)(n.code,{children:"bool"}),"): Whether the channel is enabled for public users."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"default_channel"})," (",(0,r.jsx)(n.code,{children:"bool"}),"): Whether the channel is the default channel."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"is_public"})," (",(0,r.jsx)(n.code,{children:"bool"}),"): Whether the channel is public."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"created_by"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's creator's id."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"icon"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's icon."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"channel_logo_url"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's logo url."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"allowed_content"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's allowed content."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"created_at"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's creation date."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"updated_at"})," (",(0,r.jsx)(n.code,{children:"str"}),"): The channel's last update date."]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},8453:(e,n,c)=>{c.d(n,{R:()=>i,x:()=>t});var s=c(6540);const r={},l=s.createContext(r);function i(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function t(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);